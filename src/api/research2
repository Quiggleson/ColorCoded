RGB

We've got a color represented in the [[0,255],[0,255],[0,255]] space

That we want to represent in the [0,[0,255],[0,255]] space

Problem:
- We have information of how much red, how much green, and how much blue
- We cannot represent any information in the red channel

Idea:
Since the original color was made with 1/3 red, 1/3 blue, 1/3 green, we can 
represent the same amount of information with the remaining two channels

1. Multiply the original red by 1/3
2. Multiply the original blue, green by 2/3
3. Add 1/3 of the original red to blue and 1/3 to green

In this way, the original red, blue, and green each contribute 1/3 to the new color
Problem:

Consider 
  [60,0,0] -> [0,20,0]
  [0,30,0] -> [0,20,0]
...
crap

The problem is we lose information with addition....

Based on the idea of the 3 colors being entered into a 6 digit hexadecimal value
We take the three colors, do some shenanigans, and represent them in a 4 digit
hexadecimal value.


---------------------------------------------------------------------------

Consider a Euclidean distance

C_1 = [152,124,12]
C_2 = [11,124,12]

distance = sqrt((152 - 11) ** 2 + (124 - 124) ** 2 + (12 - 12) ** 2)
distance = 11.87ish

after removing the red channel, the distance becomes 0

Note that the original distance lies in the range [0,27.658]
And the protonopia distance lies in the range [0,22.5831]

We can see that the original distance is 42.9% of the max while the protonopia
distance is 0% of the max

If we were to change one of these colors st the protonopia distance is also
42.9% of the max
